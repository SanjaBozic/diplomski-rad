#version 150
#extension GL_ARB_explicit_attrib_location : require
#extension GL_ARB_shader_bit_encoding : enable
uniform 	vec4 _ZBufferParams;
uniform 	vec4 unity_OrthoParams;
uniform 	vec4 hlslcc_mtx4unity_CameraToWorld[4];
uniform 	vec4 hlslcc_mtx4unity_WorldToShadow[16];
uniform 	vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 _ShadowMapTexture_TexelSize;
uniform  sampler2D _CameraDepthTexture;
uniform  sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
uniform  sampler2D _ShadowMapTexture;
in  vec2 vs_TEXCOORD0;
in  vec3 vs_TEXCOORD1;
in  vec3 vs_TEXCOORD2;
in  vec3 vs_TEXCOORD3;
layout(location = 0) out vec4 SV_Target0;
vec3 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
float u_xlat8;
lowp float u_xlat10_8;
vec3 u_xlat9;
float u_xlat16;
lowp float u_xlat10_16;
vec2 u_xlat17;
float u_xlat24;
void main()
{
    u_xlat0.xz = _ShadowMapTexture_TexelSize.yy;
    u_xlat0.y = 0.142857149;
    u_xlat10_1 = texture(_CameraDepthTexture, vs_TEXCOORD0.xy);
    u_xlat24 = _ZBufferParams.x * u_xlat10_1.x + _ZBufferParams.y;
    u_xlat24 = float(1.0) / u_xlat24;
    u_xlat9.x = (-u_xlat24) + u_xlat10_1.x;
    u_xlat24 = unity_OrthoParams.w * u_xlat9.x + u_xlat24;
    u_xlat9.xyz = (-vs_TEXCOORD2.xyz) + vs_TEXCOORD3.xyz;
    u_xlat1.xyz = u_xlat10_1.xxx * u_xlat9.xyz + vs_TEXCOORD2.xyz;
    u_xlat1.xyz = (-vs_TEXCOORD1.xyz) * vec3(u_xlat24) + u_xlat1.xyz;
    u_xlat2.xyz = vec3(u_xlat24) * vs_TEXCOORD1.xyz;
    u_xlat1.xyz = unity_OrthoParams.www * u_xlat1.xyz + u_xlat2.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4unity_CameraToWorld[1];
    u_xlat2 = hlslcc_mtx4unity_CameraToWorld[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat1 = hlslcc_mtx4unity_CameraToWorld[2] * u_xlat1.zzzz + u_xlat2;
    u_xlat1 = u_xlat1 + hlslcc_mtx4unity_CameraToWorld[3];
    u_xlat2.xyz = u_xlat1.yyy * hlslcc_mtx4unity_WorldToShadow[1].xyz;
    u_xlat2.xyz = hlslcc_mtx4unity_WorldToShadow[0].xyz * u_xlat1.xxx + u_xlat2.xyz;
    u_xlat2.xyz = hlslcc_mtx4unity_WorldToShadow[2].xyz * u_xlat1.zzz + u_xlat2.xyz;
    u_xlat2.xyz = hlslcc_mtx4unity_WorldToShadow[3].xyz * u_xlat1.www + u_xlat2.xyz;
    u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat24 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat24 = sqrt(u_xlat24);
    u_xlat24 = u_xlat24 * _LightShadowData.z + _LightShadowData.w;
    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);
    u_xlat1.xy = u_xlat2.xy * _ShadowMapTexture_TexelSize.zw + vec2(0.5, 0.5);
    u_xlat17.xy = fract(u_xlat1.xy);
    u_xlat1.xy = floor(u_xlat1.xy);
    u_xlat1.xy = u_xlat1.xy + vec2(-0.5, -0.5);
    u_xlat2.xy = (-u_xlat17.xy) * vec2(2.0, 2.0) + vec2(3.0, 3.0);
    u_xlat3.xy = (-u_xlat17.xy) * vec2(3.0, 3.0) + vec2(4.0, 4.0);
    u_xlat2.xy = u_xlat2.xy / u_xlat3.xy;
    u_xlat4.xy = u_xlat2.xy + vec2(-2.0, -2.0);
    u_xlat5.z = u_xlat4.y;
    u_xlat2.xy = u_xlat17.xy * vec2(3.0, 3.0) + vec2(1.0, 1.0);
    u_xlat2.xw = u_xlat17.xy / u_xlat2.xy;
    u_xlat5.xw = u_xlat2.xw + vec2(2.0, 2.0);
    u_xlat4.w = u_xlat5.x;
    u_xlat2.xw = u_xlat17.xy + vec2(3.0, 3.0);
    u_xlat17.x = u_xlat17.x * 3.0;
    u_xlat6.xz = u_xlat17.xx * vec2(-1.0, 1.0) + vec2(4.0, 1.0);
    u_xlat5.xy = u_xlat2.xw * _ShadowMapTexture_TexelSize.xy;
    u_xlat7.xyz = u_xlat0.xyz * u_xlat5.zyw;
    u_xlat4.z = u_xlat5.x;
    u_xlat5.w = u_xlat7.x;
    u_xlat0.xz = _ShadowMapTexture_TexelSize.xx;
    u_xlat0.y = 0.142857149;
    u_xlat5.xyz = u_xlat0.yxz * u_xlat4.zxw;
    u_xlat4 = u_xlat1.xyxy * _ShadowMapTexture_TexelSize.xyxy + u_xlat5.ywxw;
    u_xlat0.xy = u_xlat1.xy * _ShadowMapTexture_TexelSize.xy + u_xlat5.zw;
    vec3 txVec2 = vec3(u_xlat0.xy,u_xlat2.z);
    u_xlat10_0 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec2, 0.0);
    vec3 txVec3 = vec3(u_xlat4.xy,u_xlat2.z);
    u_xlat10_8 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec3, 0.0);
    vec3 txVec4 = vec3(u_xlat4.zw,u_xlat2.z);
    u_xlat10_16 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec4, 0.0);
    u_xlat6.y = 7.0;
    u_xlat3.xyz = u_xlat3.yyy * u_xlat6.xyz;
    u_xlat2.xyw = u_xlat2.yyy * u_xlat6.xyz;
    u_xlat17.xy = u_xlat6.xz * vec2(7.0, 7.0);
    u_xlat16 = u_xlat10_16 * u_xlat3.y;
    u_xlat8 = u_xlat3.x * u_xlat10_8 + u_xlat16;
    u_xlat0.x = u_xlat3.z * u_xlat10_0 + u_xlat8;
    u_xlat7.w = u_xlat5.y;
    u_xlat3 = u_xlat1.xyxy * _ShadowMapTexture_TexelSize.xyxy + u_xlat7.wywz;
    u_xlat5.yw = u_xlat7.yz;
    vec3 txVec5 = vec3(u_xlat3.xy,u_xlat2.z);
    u_xlat10_8 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec5, 0.0);
    vec3 txVec6 = vec3(u_xlat3.zw,u_xlat2.z);
    u_xlat10_16 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec6, 0.0);
    u_xlat0.x = u_xlat17.x * u_xlat10_8 + u_xlat0.x;
    u_xlat3 = u_xlat1.xyxy * _ShadowMapTexture_TexelSize.xyxy + u_xlat5.xyzy;
    u_xlat4 = u_xlat1.xyxy * _ShadowMapTexture_TexelSize.xyxy + u_xlat5.xwzw;
    vec3 txVec7 = vec3(u_xlat3.xy,u_xlat2.z);
    u_xlat10_8 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec7, 0.0);
    vec3 txVec8 = vec3(u_xlat3.zw,u_xlat2.z);
    u_xlat10_1.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec8, 0.0);
    u_xlat0.x = u_xlat10_8 * 49.0 + u_xlat0.x;
    u_xlat0.x = u_xlat17.y * u_xlat10_1.x + u_xlat0.x;
    u_xlat0.x = u_xlat2.x * u_xlat10_16 + u_xlat0.x;
    vec3 txVec9 = vec3(u_xlat4.xy,u_xlat2.z);
    u_xlat10_8 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec9, 0.0);
    vec3 txVec10 = vec3(u_xlat4.zw,u_xlat2.z);
    u_xlat10_16 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec10, 0.0);
    u_xlat0.x = u_xlat2.y * u_xlat10_8 + u_xlat0.x;
    u_xlat0.x = u_xlat2.w * u_xlat10_16 + u_xlat0.x;
    u_xlat0.x = u_xlat0.x * 0.0069444445;
    u_xlat8 = (-_LightShadowData.x) + 1.0;
    u_xlat0.x = u_xlat0.x * u_xlat8 + _LightShadowData.x;
    SV_Target0 = vec4(u_xlat24) + u_xlat0.xxxx;
    return;
}