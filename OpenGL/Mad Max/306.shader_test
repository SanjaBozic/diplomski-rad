[require]
GLSL >= 4.60
GL_ARB_separate_shader_objects
SSO ENABLED

[fragment shader]
#version 460 core
// ps_5_0
// Checksum: d0c071d6_983b6c66_368717e4_5c20d56c
// Name: ssao_blur

layout(location = 1) in idx_Varying1 { vec4 v; } v1;
layout(location = 0) out vec4 o0;
vec4 r0, r1, r2, r3, r4;

// Uniform buffer declarations (dcl_constant_buffer)

layout (std140) uniform cb_ps0 { vec4 cb0[9]; } idx_uniforms0_ps;

layout (std140) uniform cb_ps1 { vec4 cb1[2]; } idx_uniforms1_ps;


// Sampler/resource pairs

uniform sampler2D resourceSamplerPair_0_ps; // res0, s0


void Initialise()
{
}


#define saturate(rhs)  clamp(rhs, float(0), float(1))
void main()
{
	Initialise();
	r0.xyz = ((textureLod(resourceSamplerPair_0_ps, v1.v.xy, float(0.00000000f)))).xyz;
	r0.w = dot(r0.yz, vec2(0.996108949f, 0.00389105058f));
	r1.x = intBitsToFloat(r0.w == float(1.00000000f) ? int(0xffffffff) : int(0x00000000));
	if (floatBitsToUint(r1.x) != uint(0))
	{
		o0.xyz = r0.xyz;
		o0.w = uintBitsToFloat(uint(0x3f800000));
		return;
	}
	r1.x = saturate(r0.w * float(4.00000000f));
	r1.x = log2(r1.x);
	r1.x = r1.x * float(0.100000001f);
	r1.x = exp2(r1.x);
	r1.y = -idx_uniforms1_ps.cb1[0].z + float(200.000000f);
	r1.x = fma(r1.x, r1.y, idx_uniforms1_ps.cb1[0].z);
	r1.yz = idx_uniforms1_ps.cb1[0].xy * idx_uniforms1_ps.cb1[0].ww;
	r2.xy = r1.yz * idx_uniforms0_ps.cb0[8].zw;
	r3 = fma(r2.xyxy, vec4(-4.00000000f, -4.00000000f, -3.00000000f, -3.00000000f), v1.v.xyxy);
	r3 = min(r3, idx_uniforms1_ps.cb1[1].xyxy);
	r4.xyz = ((textureLod(resourceSamplerPair_0_ps, r3.xy, float(0.00000000f)))).xyz;
	r1.w = dot(r4.yz, vec2(0.996108949f, 0.00389105058f));
	r1.w = -r0.w + r1.w;
	r1.w = saturate(fma(-r1.x, abs(r1.w), float(1.00000000f)));
	r2.z = r1.w * float(0.0629699975f);
	r2.z = r2.z * r4.x;
	r0.x = fma(r0.x, float(0.153170004f), r2.z);
	r1.w = fma(r1.w, float(0.0629699975f), float(0.153170004f));
	r3.xyz = ((textureLod(resourceSamplerPair_0_ps, r3.zw, float(0.00000000f)))).xyz;
	r2.z = dot(r3.yz, vec2(0.996108949f, 0.00389105058f));
	r2.z = -r0.w + r2.z;
	r2.z = saturate(fma(-r1.x, abs(r2.z), float(1.00000000f)));
	r2.w = r2.z * float(0.0929019973f);
	r0.x = fma(r3.x, r2.w, r0.x);
	r1.w = fma(r2.z, float(0.0929019973f), r1.w);
	r3 = fma(r2.xyxy, vec4(-2.00000000f, -2.00000000f, 3.00000000f, 3.00000000f), v1.v.xyxy);
	r3 = min(r3, idx_uniforms1_ps.cb1[1].xyxy);
	r4.xyz = ((textureLod(resourceSamplerPair_0_ps, r3.xy, float(0.00000000f)))).xyz;
	r2.z = dot(r4.yz, vec2(0.996108949f, 0.00389105058f));
	r2.z = -r0.w + r2.z;
	r2.z = saturate(fma(-r1.x, abs(r2.z), float(1.00000000f)));
	r2.w = r2.z * float(0.122648999f);
	r0.x = fma(r4.x, r2.w, r0.x);
	r1.w = fma(r2.z, float(0.122648999f), r1.w);
	r2.zw = fma(-r1.yz, idx_uniforms0_ps.cb0[8].zw, v1.v.xy);
	r2.zw = min(r2.zw, idx_uniforms1_ps.cb1[1].xy);
	r4.xyz = ((textureLod(resourceSamplerPair_0_ps, r2.zw, float(0.00000000f)))).xyz;
	r2.z = dot(r4.yz, vec2(0.996108949f, 0.00389105058f));
	r2.z = -r0.w + r2.z;
	r2.z = saturate(fma(-r1.x, abs(r2.z), float(1.00000000f)));
	r2.w = r2.z * float(0.144893005f);
	r0.x = fma(r4.x, r2.w, r0.x);
	r1.w = fma(r2.z, float(0.144893005f), r1.w);
	r1.yz = fma(r1.yz, idx_uniforms0_ps.cb0[8].zw, v1.v.xy);
	r1.yz = min(r1.yz, idx_uniforms1_ps.cb1[1].xy);
	r4.xyz = ((textureLod(resourceSamplerPair_0_ps, r1.yz, float(0.00000000f)))).xyz;
	r1.y = dot(r4.yz, vec2(0.996108949f, 0.00389105058f));
	r1.y = -r0.w + r1.y;
	r1.y = saturate(fma(-r1.x, abs(r1.y), float(1.00000000f)));
	r1.z = r1.y * float(0.144893005f);
	r0.x = fma(r4.x, r1.z, r0.x);
	r1.y = fma(r1.y, float(0.144893005f), r1.w);
	r1.zw = fma(r2.xy, vec2(2.00000000f, 2.00000000f), v1.v.xy);
	r1.zw = min(r1.zw, idx_uniforms1_ps.cb1[1].xy);
	r4.xyz = ((textureLod(resourceSamplerPair_0_ps, r1.zw, float(0.00000000f)))).xyz;
	r1.z = dot(r4.yz, vec2(0.996108949f, 0.00389105058f));
	r1.z = -r0.w + r1.z;
	r1.z = saturate(fma(-r1.x, abs(r1.z), float(1.00000000f)));
	r1.w = r1.z * float(0.122648999f);
	r0.x = fma(r4.x, r1.w, r0.x);
	r1.y = fma(r1.z, float(0.122648999f), r1.y);
	r3.xyz = ((textureLod(resourceSamplerPair_0_ps, r3.zw, float(0.00000000f)))).xyz;
	r1.z = dot(r3.yz, vec2(0.996108949f, 0.00389105058f));
	r1.z = -r0.w + r1.z;
	r1.z = saturate(fma(-r1.x, abs(r1.z), float(1.00000000f)));
	r1.w = r1.z * float(0.0929019973f);
	r0.x = fma(r3.x, r1.w, r0.x);
	r1.y = fma(r1.z, float(0.0929019973f), r1.y);
	r1.zw = fma(r2.xy, vec2(4.00000000f, 4.00000000f), v1.v.xy);
	r1.zw = min(r1.zw, idx_uniforms1_ps.cb1[1].xy);
	r2.xyz = ((textureLod(resourceSamplerPair_0_ps, r1.zw, float(0.00000000f)))).xyz;
	r1.z = dot(r2.yz, vec2(0.996108949f, 0.00389105058f));
	r0.w = -r0.w + r1.z;
	r0.w = saturate(fma(-r1.x, abs(r0.w), float(1.00000000f)));
	r1.x = r0.w * float(0.0629699975f);
	r0.x = fma(r2.x, r1.x, r0.x);
	r0.w = fma(r0.w, float(0.0629699975f), r1.y);
	r0.w = r0.w + float(9.99999975e-05f);
	o0.x = r0.x / r0.w;
	o0.yz = r0.yz;
	o0.w = uintBitsToFloat(uint(0x3f800000));
	return;
}


