[require]
GLSL >= 3.30
GL_ARB_separate_shader_objects
SSO ENABLED

[fragment shader]
#version 330 core
// LunarGOO output
#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable
layout(std140, binding = 0 ) uniform PerViewConstantBuffer_t {
	layout(row_major) mat4 g_matWorldToProjection;
	layout(row_major) mat4 g_matProjectionToWorld;
	layout(row_major) mat4 g_matWorldToView;
	layout(row_major) mat4 g_matViewToProjection;
	vec4 g_vInvProjRow3;
	vec4 g_vClipPlane0;
	float g_flToneMapScalarLinear;
	float g_flLightMapScalar;
	float g_flEnvMapScalar;
	float g_flToneMapScalarGamma;
	vec3 g_vCameraPositionWs;
	float g_flViewportMinZ;
	vec3 g_vCameraDirWs;
	float g_flViewportMaxZ;
	vec3 g_vCameraUpDirWs;
	float g_flTime;
	vec3 g_vDepthPsToVsConversion;
	float g_flNearPlane;
	float g_flFarPlane;
	float g_flLightBinnerFarPlane;
	vec2 g_vInvViewportSize;
	vec2 g_vViewportToGBufferRatio;
	vec2 g_vMorphTextureAtlasSize;
	vec4 g_vInvGBufferSize;
	vec2 g_vViewportOffset;
	vec2 g_vViewportSize;
	vec2 g_vRenderTargetSize;
	float g_flFogBlendToBackground;
	float g_flHenyeyGreensteinCoeff;
	vec3 g_vFogColor;
	float g_flNegFogStartOverFogRange;
	float g_flInvFogRange;
	float g_flFogMaxDensity;
	float g_flFogExponent;
	float g_flMod2xIdentity;
	vec2 g_bRoughnessParams;
	float g_bStereoEnabled;
	float g_flStereoCameraIndex;
	vec3 g_vMiddleEyePositionWs;
	float g_flPad2;
	layout(row_major) mat4 g_matWorldToProjectionMultiview[2];
	vec4 g_vCameraPositionWsMultiview[2];
	vec4 g_vFrameBufferCopyInvSizeAndUvScale;
	vec4 g_vCameraAngles;
	vec4 g_vWorldToCameraOffset;
	vec4 g_vWorldToCameraOffsetMultiview[2];
	vec4 g_vPerViewConstantExtraData0;
	vec4 g_vPerViewConstantExtraData1;
	vec4 g_vPerViewConstantExtraData2;
	vec4 g_vPerViewConstantExtraData3;
} ;
layout(std140, binding = 1 ) uniform DotaGlobalParams_t {
	vec3 g_vGlobalLightDir;
	vec3 g_vGlobalLightColor;
	float g_flGlobalLightSpecularScale;
	vec3 g_vGlobalLightSpecularDir;
	float g_flGlobalLightSpecularExp;
	vec3 g_vGlobalLightSpecularColor;
	float g_flGlobalLightSpecularIndependence;
	vec3 g_vGlobalLightAmbientDir;
	float g_flGlobalLightAmbientScale1;
	vec3 g_vGlobalLightAmbientColor1;
	float g_flGlobalLightAmbientScale2;
	vec3 g_vGlobalLightAmbientColor2;
	float g_flGlobalLightAmbientScale2Hero;
	vec2 g_vGlobalCloud1Offset;
	vec2 g_vGlobalCloud2Offset;
	vec3 g_vFowColor;
	float g_flGlobalCloudScale;
	float g_flFowDarkness;
	float g_flFowGrayFactor;
	float g_flFowColorFactor;
	float g_flFowGrayHilights;
	vec4 g_vFowWorldSize;
	vec4 g_vFowTexOffsets;
	layout(row_major) mat4 g_matShadowWorldToTexture;
	vec4 g_vInvShadowDepthTextureSize;
	vec3 g_vGlobalLightAmbientColor3;
	float g_flGlobalLightAmbientShadowAmount;
} ;
layout( binding = 5 ) uniform sampler2DShadow g_tShadowDepthTexture;
layout( binding = 3 ) uniform sampler2D g_tSsao;
layout( binding = 0 ) uniform sampler2D g_tGBufferNormalWs;
layout( binding = 1 ) uniform sampler2D g_tGBufferAlbedo;
layout( binding = 2 ) uniform sampler2D g_tGBufferDepth;
layout( binding = 4 ) uniform sampler2D g_tGBufferLightingTerms;
layout(std140) uniform _Globals_ {
	vec4 g_vTextureSize;
	vec4 g_vInvTextureSize;
} ;
uniform sampler2D g_tFow;
uniform sampler2D g_tFrameBufferCopyTexture;
uniform sampler2D g_tDepthTexture;
layout(std140) uniform PerViewLightingConstantBuffer_t {
	vec4 g_vInvLightTextureDims;
	vec4 g_vLightBinCounts;
	vec2 g_vLowResDeferredLightingTextureDim;
	vec2 g_vLowResDeferredLightingTextureInvDim;
	vec3 g_vToolsAmbientLighting;
	float g_flSSAOEnabled;
	vec3 g_vIrradAtlasInvSize;
	float g_flIrradGlobalLightingFactor;
	vec4 g_vGlobalLightingSHRed;
	vec4 g_vGlobalLightingSHGreen;
	vec4 g_vGlobalLightingSHBlue;
	vec3 g_vRayleighScatteringCoeff;
	float g_flMieScatteringEccentricity;
	vec3 g_vMieScatteringCoeff;
	float g_flMieForwardScatteringRatio;
	vec3 g_vSpecularCubeMapScale;
	float g_flDefaultEnvMapIndex;
	vec4 g_vLightCookieSheetSequenceAndSizes;
	vec3 g_vLpvBoxMinCascade0;
	float g_flLpvBrightnessScale;
	vec3 g_vLpvInvBoxDimCascade0;
	vec2 g_vLpvInvCoeffTextureDim;
} ;
layout(std140) uniform PerLayerConstantBuffer_t {
	vec4 g_vWireframeColor;
} ;
uniform sampler2D g_tClouds;
layout(location=0) in vec2 PS_INPUT_gl_vTexCoord;
layout(location=1) in vec3 PS_INPUT_gl_vCameraToFarPlaneDirWs;
layout(location=0) out vec4 PS_OUTPUT_gl_vColor;
const float C_0d0 = 0.0;
const vec3 C_vec3pa0d5p = vec3(-0.5);
const vec3 C_vec3p2d0p = vec3(2.0);
const vec2 C_vec2p0d5p = vec2(0.5);
const vec2 C_vec2p1d0p = vec2(1.0);
const float C_1d0 = 1.0;
const vec2 C_vec2pa0d5p = vec2(-0.5);
const vec2 C_a1z03r = vec2(0.0, 0.0);
const vec2 C_86o5yl1 = vec2(0.996109, 0.00389105);
const float C_255d0 = 255.0;
const float C_0d0625 = 0.0625;
const float C_16d0 = 16.0;
const vec2 C_vec2pa8d0p = vec2(-8.0);
const vec2 C_vec2p7d0p = vec2(7.0);
const float C_0d000976577 = 0.000976577;
const float C_120d0 = 120.0;
const float C_a0d3 = -0.3;
const float C_0d7 = 0.7;
const float C_1d25ea07 = 1.25e-07;
const vec3 C_vec3p0d0p = vec3(0.0);
const vec4 C_wt9i7t = vec4(0.0749064);
const vec4 C_a1xzaw1 = vec4(0.123596);
const float C_0d205993 = 0.205993;
const float C_1d85 = 1.85;
const float C_0d45 = 0.45;
const float C_2d1 = 2.1;
const float C_0d5 = 0.5;
const vec3 C_kfumqy1 = vec3(0.2125, 0.7154, 0.0721);
void main()
{
	vec4 vNormal = textureLod(g_tGBufferNormalWs, PS_INPUT_gl_vTexCoord, C_0d0);
	vec3 H_dk24o2 = vNormal.xyz + C_vec3pa0d5p;
	vec3 H_tzze0x = H_dk24o2 * C_vec3p2d0p;
	vec4 vDiffuse = textureLod(g_tGBufferAlbedo, PS_INPUT_gl_vTexCoord, C_0d0);
	vec4 flLinearDepth = textureLod(g_tGBufferDepth, PS_INPUT_gl_vTexCoord, C_0d0);
	vec2 H_839ve4 = gl_FragCoord.xy * C_vec2p0d5p;
	vec2 H_eqtmos = fract(H_839ve4);
	vec2 vFracPositionSs = C_vec2p1d0p - H_eqtmos;
	float H_sf5rvj = C_1d0 - vFracPositionSs.x;
	float H_r4rq5k = C_1d0 - vFracPositionSs.y;
	float H_0q6iay1 = H_r4rq5k * H_sf5rvj;
	float H_ch5qp8 = H_r4rq5k * vFracPositionSs.x;
	float H_usw7dd = H_sf5rvj * vFracPositionSs.y;
	float H_mmslje = vFracPositionSs.x * vFracPositionSs.y;
	vec4 H_kkv1ke = vec4(H_0q6iay1, H_ch5qp8, H_usw7dd, H_mmslje);
	vec2 H_m0xqqj1 = H_839ve4 + C_vec2pa0d5p;
	vec2 vSamplePositionSs = H_m0xqqj1 * g_vInvGBufferSize.xy;
	vec4 vSample = texture(g_tSsao, vSamplePositionSs);
	vec2 H_t6myr1 = vec2(g_vInvGBufferSize.x, C_0d0);
	vec2 H_dyfw1a1 = H_t6myr1 + vSamplePositionSs;
	vec4 vSample1 = texture(g_tSsao, H_dyfw1a1);
	vec2 H_23b4ob1 = C_a1z03r;
	H_23b4ob1.y = g_vInvGBufferSize.y;
	vec2 H_7kkr0y = H_23b4ob1 + vSamplePositionSs;
	vec4 vSample2 = texture(g_tSsao, H_7kkr0y);
	vec2 H_h185xj1 = g_vInvGBufferSize.xy + vSamplePositionSs;
	vec4 vSample3 = texture(g_tSsao, H_h185xj1);
	float misc2a = dot(vSample.yz, C_86o5yl1);
	float H_wrjwvl = vSample.w * C_255d0;
	float H_n1cluy = H_wrjwvl * C_0d0625;
	float H_d2h2r8 = floor(H_n1cluy);
	float H_5bdohg = H_d2h2r8 * C_16d0;
	float H_fkiy4a1 = H_wrjwvl - H_5bdohg;
	vec2 H_d709it1 = vec2(H_d2h2r8, H_fkiy4a1);
	vec2 H_oib7d3 = H_d709it1 + C_vec2pa8d0p;
	vec2 H_enpjaw1 = H_oib7d3 / C_vec2p7d0p;
	float H_1kl0iq = H_enpjaw1.x * H_enpjaw1.x;
	float H_4onjbh1 = C_1d0 - H_1kl0iq;
	float H_tonww01 = H_enpjaw1.y * H_enpjaw1.y;
	float H_arn9kw1 = H_4onjbh1 - H_tonww01;
	float H_4nbcq1 = max(C_0d0, H_arn9kw1);
	float H_2q8zkb1 = sqrt(H_4nbcq1);
	vec3 H_y0e2hv = vec3(H_enpjaw1.x, H_enpjaw1.y, H_2q8zkb1);
	float H_tutomp = misc2a - flLinearDepth.x;
	float flDepthDelta = H_tutomp + C_0d000976577;
	bool H_wpkitp1 = flDepthDelta < C_0d0;
	float flDepthDelta1 = C_0d0 - flDepthDelta;
	float select = H_wpkitp1 ? flDepthDelta1 : flDepthDelta;
	float param = select * C_120d0;
	float misc3a = clamp(param, C_0d0, C_1d0);
	float flWeight = C_1d0 - misc3a;
	float flNormalAng = dot(H_y0e2hv, H_tzze0x);
	float H_98e38c = flNormalAng + C_a0d3;
	float param1 = H_98e38c / C_0d7;
	float misc3a1 = clamp(param1, C_0d0, C_1d0);
	float flWeight1 = flWeight * misc3a1;
	float flWeight2 = H_0q6iay1 * flWeight1;
	float flTotalSamples = flWeight2 * vSample.x;
	float misc2a1 = dot(vSample1.yz, C_86o5yl1);
	float H_1nwvmm1 = C_255d0 * vSample1.w;
	float H_6yu88k1 = C_0d0625 * H_1nwvmm1;
	float H_xtzfgc = floor(H_6yu88k1);
	float H_1lzo3x1 = C_16d0 * H_xtzfgc;
	float H_jt2pw4 = H_1nwvmm1 - H_1lzo3x1;
	vec2 H_p8jrsg = vec2(H_xtzfgc, H_jt2pw4);
	vec2 H_cmlsy6 = C_vec2pa8d0p + H_p8jrsg;
	vec2 H_myr9jd = H_cmlsy6 / C_vec2p7d0p;
	float H_1okgnw = H_myr9jd.x * H_myr9jd.x;
	float H_f4wgh61 = C_1d0 - H_1okgnw;
	float H_fdi00i1 = H_myr9jd.y * H_myr9jd.y;
	float H_a6xley1 = H_f4wgh61 - H_fdi00i1;
	float H_x5xbgo = max(C_0d0, H_a6xley1);
	float H_qnqxyr1 = sqrt(H_x5xbgo);
	vec3 H_bz1q8b = vec3(H_myr9jd.x, H_myr9jd.y, H_qnqxyr1);
	float H_u61ci41 = misc2a1 - flLinearDepth.x;
	float flDepthDelta2 = C_0d000976577 + H_u61ci41;
	bool H_eph5je = flDepthDelta2 < C_0d0;
	float flDepthDelta3 = C_0d0 - flDepthDelta2;
	float select1 = H_eph5je ? flDepthDelta3 : flDepthDelta2;
	float param2 = C_120d0 * select1;
	float misc3a2 = clamp(param2, C_0d0, C_1d0);
	float flWeight3 = C_1d0 - misc3a2;
	float flNormalAng1 = dot(H_bz1q8b, H_tzze0x);
	float H_g639cf = C_a0d3 + flNormalAng1;
	float param3 = H_g639cf / C_0d7;
	float misc3a3 = clamp(param3, C_0d0, C_1d0);
	float flWeight4 = flWeight3 * misc3a3;
	float flWeight5 = H_ch5qp8 * flWeight4;
	float flTotalWeight = flWeight2 + flWeight5;
	float H_puw8v81 = flWeight5 * vSample1.x;
	float flTotalSamples1 = H_puw8v81 + flTotalSamples;
	float misc2a2 = dot(vSample2.yz, C_86o5yl1);
	float H_wgz86o = C_255d0 * vSample2.w;
	float H_kp16mj = C_0d0625 * H_wgz86o;
	float H_okm62e1 = floor(H_kp16mj);
	float H_6d569c1 = C_16d0 * H_okm62e1;
	float H_rdvo2 = H_wgz86o - H_6d569c1;
	vec2 H_gnpsui1 = vec2(H_okm62e1, H_rdvo2);
	vec2 H_37er03 = C_vec2pa8d0p + H_gnpsui1;
	vec2 H_gdpdg1 = H_37er03 / C_vec2p7d0p;
	float H_x3f65r = H_gdpdg1.x * H_gdpdg1.x;
	float H_gw1hdv1 = C_1d0 - H_x3f65r;
	float H_fj5p3v = H_gdpdg1.y * H_gdpdg1.y;
	float H_kbay8b = H_gw1hdv1 - H_fj5p3v;
	float H_6koizn1 = max(C_0d0, H_kbay8b);
	float H_dapzb41 = sqrt(H_6koizn1);
	vec3 H_p67hae1 = vec3(H_gdpdg1.x, H_gdpdg1.y, H_dapzb41);
	float H_bmu44y1 = misc2a2 - flLinearDepth.x;
	float flDepthDelta4 = C_0d000976577 + H_bmu44y1;
	bool H_w9s0fc1 = flDepthDelta4 < C_0d0;
	float flDepthDelta5 = C_0d0 - flDepthDelta4;
	float select2 = H_w9s0fc1 ? flDepthDelta5 : flDepthDelta4;
	float param4 = C_120d0 * select2;
	float misc3a4 = clamp(param4, C_0d0, C_1d0);
	float flWeight6 = C_1d0 - misc3a4;
	float flNormalAng2 = dot(H_p67hae1, H_tzze0x);
	float H_d9w76g = C_a0d3 + flNormalAng2;
	float param5 = H_d9w76g / C_0d7;
	float misc3a5 = clamp(param5, C_0d0, C_1d0);
	float flWeight7 = flWeight6 * misc3a5;
	float flWeight8 = H_usw7dd * flWeight7;
	float flTotalWeight1 = flTotalWeight + flWeight8;
	float H_1md6qm1 = flWeight8 * vSample2.x;
	float flTotalSamples2 = H_1md6qm1 + flTotalSamples1;
	float misc2a3 = dot(vSample3.yz, C_86o5yl1);
	float H_3hwsfx1 = C_255d0 * vSample3.w;
	float H_blrk8x = C_0d0625 * H_3hwsfx1;
	float H_mpsgvq = floor(H_blrk8x);
	float H_l5y156 = C_16d0 * H_mpsgvq;
	float H_sm3sr2 = H_3hwsfx1 - H_l5y156;
	vec2 H_ykp19s1 = vec2(H_mpsgvq, H_sm3sr2);
	vec2 H_8d64ch1 = C_vec2pa8d0p + H_ykp19s1;
	vec2 H_syhxb71 = H_8d64ch1 / C_vec2p7d0p;
	float H_pcv79q1 = H_syhxb71.x * H_syhxb71.x;
	float H_9fpm46 = C_1d0 - H_pcv79q1;
	float H_pkbt7y1 = H_syhxb71.y * H_syhxb71.y;
	float H_0dvmsq1 = H_9fpm46 - H_pkbt7y1;
	float H_dmcdwc = max(C_0d0, H_0dvmsq1);
	float H_l0mart1 = sqrt(H_dmcdwc);
	vec3 H_kg4vsr1 = vec3(H_syhxb71.x, H_syhxb71.y, H_l0mart1);
	float H_wnnluw1 = misc2a3 - flLinearDepth.x;
	float flDepthDelta6 = C_0d000976577 + H_wnnluw1;
	bool H_2j3p8b = flDepthDelta6 < C_0d0;
	float flDepthDelta7 = C_0d0 - flDepthDelta6;
	float select3 = H_2j3p8b ? flDepthDelta7 : flDepthDelta6;
	float param6 = C_120d0 * select3;
	float misc3a6 = clamp(param6, C_0d0, C_1d0);
	float flWeight9 = C_1d0 - misc3a6;
	float flNormalAng3 = dot(H_kg4vsr1, H_tzze0x);
	float H_eka8wf = C_a0d3 + flNormalAng3;
	float param7 = H_eka8wf / C_0d7;
	float misc3a7 = clamp(param7, C_0d0, C_1d0);
	float flWeighta = flWeight9 * misc3a7;
	float flWeightb = H_mmslje * flWeighta;
	float flTotalWeight2 = flTotalWeight1 + flWeightb;
	bool H_sf5ge21 = flTotalWeight2 < C_1d25ea07;
	vec4 H_ak14gx1 = vec4(vSample.x, vSample1.x, vSample2.x, vSample3.x);
	float misc2a4 = dot(H_kkv1ke, H_ak14gx1);
	float H_42ayza = flWeightb * vSample3.x;
	float flTotalSamples3 = H_42ayza + flTotalSamples2;
	float H_0hxl78 = flTotalSamples3 / flTotalWeight2;
	float select4 = H_sf5ge21 ? misc2a4 : H_0hxl78;
	vec3 H_28t7ha1 = PS_INPUT_gl_vCameraToFarPlaneDirWs * flLinearDepth.xxx;
	vec3 vPositionWs = H_28t7ha1 + g_vCameraPositionWs;
	vec4 vSpecular = textureLod(g_tGBufferLightingTerms, PS_INPUT_gl_vTexCoord, C_0d0);
	vec3 H_523oj5 = vPositionWs - g_vCameraPositionWs;
	vec3 H_0rv61p = normalize(H_523oj5);
	vec3 H_jxvi9a1 = C_vec3p0d0p - H_0rv61p;
	vec3 vReflect = reflect(H_jxvi9a1, H_tzze0x);
	float flSpecular = dot(g_vGlobalLightSpecularDir, vReflect);
	float misc3a8 = clamp(flSpecular, C_0d0, C_1d0);
	float flSpecular1 = pow(misc3a8, g_flGlobalLightSpecularExp);
	float flSpecular2 = flSpecular1 * vSpecular.x;
	vec3 H_s6408y = vec3(flSpecular2);
	vec3 flSpecularRGB = H_s6408y * g_vGlobalLightSpecularColor;
	float misc3a9 = clamp(g_flGlobalLightSpecularIndependence, C_0d0, C_1d0);
	vec3 H_0eej971 = vec3(misc3a9);
	float H_6epx14 = C_1d0 - misc3a9;
	vec3 H_6brmrd = vec3(H_6epx14);
	vec3 H_77w10h = H_6brmrd * flSpecularRGB;
	vec3 H_468g161 = H_77w10h + vDiffuse.xyz;
	vec3 H_j03jbn = C_vec3p0d0p - g_vGlobalLightDir;
	float flNDotL = dot(H_j03jbn, H_tzze0x);
	float misc3aa = clamp(flNDotL, C_0d0, C_1d0);
	float product = g_matShadowWorldToTexture[0].x * vPositionWs.x;
	float product1 = g_matShadowWorldToTexture[1].x * vPositionWs.y;
	float dotProduct = product + product1;
	float product2 = g_matShadowWorldToTexture[2].x * vPositionWs.z;
	float dotProduct1 = dotProduct + product2;
	float dotProduct2 = dotProduct1 + g_matShadowWorldToTexture[3].x;
	float product3 = g_matShadowWorldToTexture[0].y * vPositionWs.x;
	float product4 = g_matShadowWorldToTexture[1].y * vPositionWs.y;
	float dotProduct3 = product3 + product4;
	float product5 = g_matShadowWorldToTexture[2].y * vPositionWs.z;
	float dotProduct4 = dotProduct3 + product5;
	float dotProduct5 = dotProduct4 + g_matShadowWorldToTexture[3].y;
	float product6 = g_matShadowWorldToTexture[0].z * vPositionWs.x;
	float product7 = g_matShadowWorldToTexture[1].z * vPositionWs.y;
	float dotProduct6 = product6 + product7;
	float product8 = g_matShadowWorldToTexture[2].z * vPositionWs.z;
	float dotProduct7 = dotProduct6 + product8;
	float dotProduct8 = dotProduct7 + g_matShadowWorldToTexture[3].z;
	float product9 = g_matShadowWorldToTexture[0].w * vPositionWs.x;
	float producta = g_matShadowWorldToTexture[1].w * vPositionWs.y;
	float dotProduct9 = product9 + producta;
	float productb = g_matShadowWorldToTexture[2].w * vPositionWs.z;
	float dotProducta = dotProduct9 + productb;
	float dotProductb = dotProducta + g_matShadowWorldToTexture[3].w;
	vec3 H_16wbh81 = vec3(dotProductb);
	vec3 H_mo5dbs1 = vec3(dotProduct2, dotProduct5, dotProduct8);
	vec3 H_qdsg5k1 = H_mo5dbs1 / H_16wbh81;
	float param8 = C_0d0 - H_qdsg5k1.z;
	float misc3ab = clamp(param8, C_0d0, C_1d0);
	float H_60ojyb = C_0d0 - g_vInvShadowDepthTextureSize.x;
	vec2 H_t5te6f = vec2(H_60ojyb);
	vec2 H_ep5c3j1 = H_qdsg5k1.xy + g_vInvShadowDepthTextureSize.xx;
	vec3 H_0zgivj = vec3(H_ep5c3j1.x, H_ep5c3j1.y, misc3ab);
	float H_n49cdq1 = textureLod(g_tShadowDepthTexture, H_0zgivj, C_0d0);
	vec2 H_pv0in9 = vec2(H_60ojyb, g_vInvShadowDepthTextureSize.x);
	vec2 H_he48ts = H_pv0in9 + H_qdsg5k1.xy;
	vec3 H_w72pgt = vec3(H_he48ts.x, H_he48ts.y, misc3ab);
	float H_m5t172 = textureLod(g_tShadowDepthTexture, H_w72pgt, C_0d0);
	vec2 H_t32u4i1 = vec2(g_vInvShadowDepthTextureSize.x, H_60ojyb);
	vec2 H_3zubtq = H_qdsg5k1.xy + H_t32u4i1;
	vec3 H_w4ybqp1 = vec3(H_3zubtq.x, H_3zubtq.y, misc3ab);
	float H_5wm0r = textureLod(g_tShadowDepthTexture, H_w4ybqp1, C_0d0);
	vec2 H_r37y1w = H_qdsg5k1.xy + H_t5te6f;
	vec3 H_gsly7m1 = vec3(H_r37y1w.x, H_r37y1w.y, misc3ab);
	float H_lqirdr1 = textureLod(g_tShadowDepthTexture, H_gsly7m1, C_0d0);
	vec4 H_g9xnu21 = vec4(H_n49cdq1, H_m5t172, H_5wm0r, H_lqirdr1);
	float flSum = dot(H_g9xnu21, C_wt9i7t);
	vec2 H_e9rh661 = vec2(g_vInvShadowDepthTextureSize.x, C_0d0);
	vec2 H_85dk7x = H_e9rh661 + H_qdsg5k1.xy;
	vec3 H_8j4reo1 = vec3(H_85dk7x.x, H_85dk7x.y, misc3ab);
	float H_e30zh1 = textureLod(g_tShadowDepthTexture, H_8j4reo1, C_0d0);
	vec2 H_na4vhz = vec2(H_60ojyb, C_0d0);
	vec2 H_iybrli = H_na4vhz + H_qdsg5k1.xy;
	vec3 H_w1qd5k1 = vec3(H_iybrli.x, H_iybrli.y, misc3ab);
	float H_1jgz24 = textureLod(g_tShadowDepthTexture, H_w1qd5k1, C_0d0);
	vec2 H_23b4ob1r = C_a1z03r;
	H_23b4ob1r.y = H_60ojyb;
	vec2 H_omz8p81 = H_23b4ob1r + H_qdsg5k1.xy;
	vec3 H_gss4281 = vec3(H_omz8p81.x, H_omz8p81.y, misc3ab);
	float H_f7ggir1 = textureLod(g_tShadowDepthTexture, H_gss4281, C_0d0);
	vec2 H_23b4ob1rr = C_a1z03r;
	H_23b4ob1rr.y = g_vInvShadowDepthTextureSize.x;
	vec2 H_sdufjg = H_23b4ob1rr + H_qdsg5k1.xy;
	vec3 H_oqiaxv = vec3(H_sdufjg.x, H_sdufjg.y, misc3ab);
	float H_hm8ihs1 = textureLod(g_tShadowDepthTexture, H_oqiaxv, C_0d0);
	vec4 H_ogsfa9 = vec4(H_e30zh1, H_1jgz24, H_f7ggir1, H_hm8ihs1);
	float flSum1 = dot(H_ogsfa9, C_a1xzaw1);
	float flSum2 = flSum + flSum1;
	vec3 H_qjc48r1 = vec3(H_qdsg5k1.x, H_qdsg5k1.y, misc3ab);
	float flSum3 = textureLod(g_tShadowDepthTexture, H_qjc48r1, C_0d0);
	float H_xchcee1 = flSum3 * C_0d205993;
	float flSum4 = H_xchcee1 + flSum2;
	vec3 H_k9xsqt1 = vec3(flSum4);
	float flDirectionalAmbientShadow = mix(C_1d0, flSum4, g_flGlobalLightAmbientShadowAmount);
	float H_p4ktd5 = C_1d0 - select4;
	float flDirectOcclusionFactor = pow(H_p4ktd5, C_1d85);
	float flDirectOcclusionFactor1 = mix(C_0d45, C_1d0, flDirectOcclusionFactor);
	float flIndirectOcclusionFactor = pow(H_p4ktd5, C_2d1);
	vec3 H_fx1uua = vec3(g_flGlobalLightAmbientScale1);
	vec3 vDirectionalAmbientColor = H_fx1uua * g_vGlobalLightAmbientColor1;
	float H_kc8u2q = H_tzze0x.z * C_0d5;
	float H_461fcm1 = C_0d5 + H_kc8u2q;
	vec3 vShadowAmbientColor = mix(g_vGlobalLightAmbientColor3, g_vGlobalLightAmbientColor2, H_461fcm1);
	vec3 H_s7noda1 = vec3(g_flGlobalLightAmbientScale2);
	vec3 vShadowAmbientColor1 = H_s7noda1 * vShadowAmbientColor;
	float flLuminance = dot(vDirectionalAmbientColor, C_kfumqy1);
	vec3 H_t1lelu1 = vec3(flLuminance);
	float flLuminance1 = dot(vShadowAmbientColor1, C_kfumqy1);
	vec3 H_chpant1 = vec3(flLuminance1);
	vec3 vDirectionalAmbientColor1 = mix(vDirectionalAmbientColor, H_t1lelu1, vSpecular.zzz);
	vec3 vShadowAmbientColor2 = mix(vShadowAmbientColor1, H_chpant1, vSpecular.zzz);
	float H_rbngcm = flSum4 * misc3aa;
	float H_h1dxo71 = H_rbngcm * flDirectOcclusionFactor1;
	vec3 H_09qd68 = vec3(H_h1dxo71);
	vec3 vDirectLight = H_09qd68 * g_vGlobalLightColor;
	float vDirectionalAmbientLight = dot(g_vGlobalLightAmbientDir, H_tzze0x);
	float misc3ac = clamp(vDirectionalAmbientLight, C_0d0, C_1d0);
	float H_8tfe1s = flDirectionalAmbientShadow * misc3ac;
	float H_llhj97 = H_8tfe1s * flIndirectOcclusionFactor;
	vec3 H_kftl1q = vec3(H_llhj97);
	vec3 vDirectionalAmbientLight1 = H_kftl1q * vDirectionalAmbientColor1;
	float H_thjbhf = C_1d0 - H_rbngcm;
	float H_iiw0tw1 = H_thjbhf * flIndirectOcclusionFactor;
	vec3 H_dexqbc1 = vec3(H_iiw0tw1);
	vec3 vShadowAmbientLight = H_dexqbc1 * vShadowAmbientColor2;
	vec3 H_8w78gv1 = vDirectLight + vDirectionalAmbientLight1;
	vec3 vLighting = H_8w78gv1 + vShadowAmbientLight;
	vec3 vLighted = H_468g161 * vLighting;
	vec3 H_bcfwoi = vec3(g_flGlobalLightSpecularScale);
	vec3 H_knhpna = H_bcfwoi * flSpecularRGB;
	vec3 H_qnx1e11 = H_0eej971 * H_knhpna;
	vec3 H_38af65 = H_k9xsqt1 * H_qnx1e11;
	vec3 vLighted1 = H_38af65 + vLighted;
	vec3 vDiffuse1 = mix(vLighted1, H_468g161, vSpecular.y);
	float misc3ad = clamp(flSpecular2, C_0d0, C_1d0);
	float H_u6o9x5 = misc3ad * vSpecular.z;
	vec4 H_1brhc81 = vec4(vDiffuse1.x, vDiffuse1.y, vDiffuse1.z, H_u6o9x5);
	PS_OUTPUT_gl_vColor = H_1brhc81;
}

