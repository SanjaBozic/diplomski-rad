#version 330 core
// LunarGOO output
#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable
layout(std140, binding = 0 ) uniform PerViewConstantBuffer_t {
	layout(row_major) mat4 g_matWorldToProjection;
	layout(row_major) mat4 g_matProjectionToWorld;
	layout(row_major) mat4 g_matWorldToView;
	layout(row_major) mat4 g_matViewToProjection;
	vec4 g_vInvProjRow3;
	vec4 g_vClipPlane0;
	float g_flToneMapScalarLinear;
	float g_flLightMapScalar;
	float g_flEnvMapScalar;
	float g_flToneMapScalarGamma;
	vec3 g_vCameraPositionWs;
	float g_flViewportMinZ;
	vec3 g_vCameraDirWs;
	float g_flViewportMaxZ;
	vec3 g_vCameraUpDirWs;
	float g_flTime;
	vec3 g_vDepthPsToVsConversion;
	float g_flNearPlane;
	float g_flFarPlane;
	float g_flLightBinnerFarPlane;
	vec2 g_vInvViewportSize;
	vec2 g_vViewportToGBufferRatio;
	vec2 g_vMorphTextureAtlasSize;
	vec4 g_vInvGBufferSize;
	vec2 g_vViewportOffset;
	vec2 g_vViewportSize;
	vec2 g_vRenderTargetSize;
	float g_flFogBlendToBackground;
	float g_flHenyeyGreensteinCoeff;
	vec3 g_vFogColor;
	float g_flNegFogStartOverFogRange;
	float g_flInvFogRange;
	float g_flFogMaxDensity;
	float g_flFogExponent;
	float g_flMod2xIdentity;
	vec2 g_bRoughnessParams;
	float g_bStereoEnabled;
	float g_flStereoCameraIndex;
	vec3 g_vMiddleEyePositionWs;
	float g_flPad2;
	layout(row_major) mat4 g_matWorldToProjectionMultiview[2];
	vec4 g_vCameraPositionWsMultiview[2];
	vec4 g_vFrameBufferCopyInvSizeAndUvScale;
	vec4 g_vCameraAngles;
	vec4 g_vWorldToCameraOffset;
	vec4 g_vWorldToCameraOffsetMultiview[2];
	vec4 g_vPerViewConstantExtraData0;
	vec4 g_vPerViewConstantExtraData1;
	vec4 g_vPerViewConstantExtraData2;
	vec4 g_vPerViewConstantExtraData3;
} ;
layout(std140, binding = 1 ) uniform _Globals_ {
	vec4 g_vInvTextureDim;
	float g_flOverbrightAmount;
} ;
layout( binding = 0 ) uniform sampler2D g_tInputTexture;
layout(std140) uniform PerViewLightingConstantBuffer_t {
	vec4 g_vInvLightTextureDims;
	vec4 g_vLightBinCounts;
	vec2 g_vLowResDeferredLightingTextureDim;
	vec2 g_vLowResDeferredLightingTextureInvDim;
	vec3 g_vToolsAmbientLighting;
	float g_flSSAOEnabled;
	vec3 g_vIrradAtlasInvSize;
	float g_flIrradGlobalLightingFactor;
	vec4 g_vGlobalLightingSHRed;
	vec4 g_vGlobalLightingSHGreen;
	vec4 g_vGlobalLightingSHBlue;
	vec3 g_vRayleighScatteringCoeff;
	float g_flMieScatteringEccentricity;
	vec3 g_vMieScatteringCoeff;
	float g_flMieForwardScatteringRatio;
	vec3 g_vSpecularCubeMapScale;
	float g_flDefaultEnvMapIndex;
	vec4 g_vLightCookieSheetSequenceAndSizes;
	vec3 g_vLpvBoxMinCascade0;
	float g_flLpvBrightnessScale;
	vec3 g_vLpvInvBoxDimCascade0;
	vec2 g_vLpvInvCoeffTextureDim;
} ;
layout(std140) uniform PerLayerConstantBuffer_t {
	vec4 g_vWireframeColor;
} ;
layout(location=0) in vec2 PS_INPUT_gl_vTexCoord;
layout(location=0) out vec4 PS_OUTPUT_gl_vColor;
const float C_0d019827 = 0.019827;
const float C_0d320561 = 0.320561;
const float C_0d319224 = 0.319224;
const float C_a3d09622 = -3.09622;
const vec2 C_a1z03r = vec2(0.0, 0.0);
const float C_a1d27688 = -1.27688;
const float C_0d0 = 0.0;
const float C_1d27688 = 1.27688;
const float C_3d09622 = 3.09622;
void main()
{
	vec4 H_t69hv8 = vec4(C_0d019827);
	vec4 H_nwwyz31 = vec4(C_0d320561);
	vec4 H_xzy4l51 = vec4(C_0d319224);
	vec4 H_nwwyz31r = vec4(C_0d320561);
	vec4 H_t69hv8r = vec4(C_0d019827);
	vec2 vScreenUv = g_vInvGBufferSize.xy * gl_FragCoord.xy;
	vec2 H_ce1j541 = g_vViewportOffset + g_vViewportSize;
	vec4 H_6n6odf = vec4(g_vViewportOffset.x, g_vViewportOffset.y, H_ce1j541.x, H_ce1j541.y);
	vec4 vMinMaxs = H_6n6odf * g_vInvTextureDim.xyxy;
	float H_nuossp1 = g_vInvTextureDim.y * C_a3d09622;
	vec2 H_23b4ob1 = C_a1z03r;
	H_23b4ob1.y = H_nuossp1;
	vec2 vUvTmp = H_23b4ob1 + vScreenUv;
	float vUvTmp1 = clamp(vUvTmp.y, vMinMaxs.y, vMinMaxs.w);
	vec2 H_n7nt9b1 = vUvTmp;
	H_n7nt9b1.y = vUvTmp1;
	vec4 vSample = texture(g_tInputTexture, H_n7nt9b1);
	vec4 H_rnt3sv = H_t69hv8r * vSample;
	float H_xo5dl91 = g_vInvTextureDim.y * C_a1d27688;
	vec2 H_23b4ob1r = C_a1z03r;
	H_23b4ob1r.y = H_xo5dl91;
	vec2 vUvTmp2 = H_23b4ob1r + vScreenUv;
	float vUvTmp3 = clamp(vUvTmp2.y, vMinMaxs.y, vMinMaxs.w);
	vec2 H_zomuia = vUvTmp2;
	H_zomuia.y = vUvTmp3;
	vec4 vSample1 = texture(g_tInputTexture, H_zomuia);
	vec4 H_4g8b6w1 = H_nwwyz31r * vSample1;
	vec4 H_je65h01 = H_4g8b6w1 + H_rnt3sv;
	vec2 H_23b4ob1rr = C_a1z03r;
	H_23b4ob1rr.y = C_0d0;
	vec2 vUvTmp4 = H_23b4ob1rr + vScreenUv;
	float vUvTmp5 = clamp(vUvTmp4.y, vMinMaxs.y, vMinMaxs.w);
	vec2 H_tu8s6c = vUvTmp4;
	H_tu8s6c.y = vUvTmp5;
	vec4 vSample2 = texture(g_tInputTexture, H_tu8s6c);
	vec4 H_d8velk1 = H_xzy4l51 * vSample2;
	vec4 H_efs8iq1 = H_d8velk1 + H_je65h01;
	float H_8d2v66 = g_vInvTextureDim.y * C_1d27688;
	vec2 H_23b4ob1rrr = C_a1z03r;
	H_23b4ob1rrr.y = H_8d2v66;
	vec2 vUvTmp6 = H_23b4ob1rrr + vScreenUv;
	float vUvTmp7 = clamp(vUvTmp6.y, vMinMaxs.y, vMinMaxs.w);
	vec2 H_vg1tmb = vUvTmp6;
	H_vg1tmb.y = vUvTmp7;
	vec4 vSample3 = texture(g_tInputTexture, H_vg1tmb);
	vec4 H_6d4if21 = H_nwwyz31 * vSample3;
	vec4 H_jd9o0q = H_6d4if21 + H_efs8iq1;
	float H_uk8ede1 = g_vInvTextureDim.y * C_3d09622;
	vec2 H_23b4ob1rrrr = C_a1z03r;
	H_23b4ob1rrrr.y = H_uk8ede1;
	vec2 vUvTmp8 = H_23b4ob1rrrr + vScreenUv;
	float vUvTmp9 = clamp(vUvTmp8.y, vMinMaxs.y, vMinMaxs.w);
	vec2 H_pmnqad = vUvTmp8;
	H_pmnqad.y = vUvTmp9;
	vec4 vSample4 = texture(g_tInputTexture, H_pmnqad);
	vec4 H_x07y5z = H_t69hv8 * vSample4;
	vec4 H_y9cmew = H_jd9o0q + H_x07y5z;
	vec4 H_y4h59w = vec4(g_flOverbrightAmount);
	vec4 H_nqmxd21 = H_y4h59w * H_y9cmew;
	PS_OUTPUT_gl_vColor = H_nqmxd21;
}
