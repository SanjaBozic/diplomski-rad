[require]
GLSL >= 3.30
GL_ARB_separate_shader_objects
SSO ENABLED

[vertex shader]
//ATTRIBMAP-00-50-51-52-53-5D-xx
#version 330 core
// LunarGOO output
#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable
struct PS_INPUT {
	vec4 member0;
	vec4 member1;
	vec4 member2;
	vec3 member3;
	vec4 member4;
	vec4 member5;
	vec4 member6;
	vec3 member7;
	vec4 member8;
};
layout(std140, binding = 12 ) uniform PerViewConstantBuffer_t {
	layout(row_major) mat4 g_matWorldToProjection;
	layout(row_major) mat4 g_matProjectionToWorld;
	layout(row_major) mat4 g_matWorldToView;
	layout(row_major) mat4 g_matViewToProjection;
	vec4 g_vInvProjRow3;
	vec4 g_vClipPlane0;
	float g_flToneMapScalarLinear;
	float g_flLightMapScalar;
	float g_flEnvMapScalar;
	float g_flToneMapScalarGamma;
	vec3 g_vCameraPositionWs;
	float g_flViewportMinZ;
	vec3 g_vCameraDirWs;
	float g_flViewportMaxZ;
	vec3 g_vCameraUpDirWs;
	float g_flTime;
	vec3 g_vDepthPsToVsConversion;
	float g_flNearPlane;
	float g_flFarPlane;
	float g_flLightBinnerFarPlane;
	vec2 g_vInvViewportSize;
	vec2 g_vViewportToGBufferRatio;
	vec2 g_vMorphTextureAtlasSize;
	vec4 g_vInvGBufferSize;
	vec2 g_vViewportOffset;
	vec2 g_vViewportSize;
	vec2 g_vRenderTargetSize;
	float g_flFogBlendToBackground;
	float g_flHenyeyGreensteinCoeff;
	vec3 g_vFogColor;
	float g_flNegFogStartOverFogRange;
	float g_flInvFogRange;
	float g_flFogMaxDensity;
	float g_flFogExponent;
	float g_flMod2xIdentity;
	vec2 g_bRoughnessParams;
	float g_bStereoEnabled;
	float g_flStereoCameraIndex;
	vec3 g_vMiddleEyePositionWs;
	float g_flPad2;
	layout(row_major) mat4 g_matWorldToProjectionMultiview[2];
	vec4 g_vCameraPositionWsMultiview[2];
	vec4 g_vFrameBufferCopyInvSizeAndUvScale;
	vec4 g_vCameraAngles;
	vec4 g_vWorldToCameraOffset;
	vec4 g_vWorldToCameraOffsetMultiview[2];
	vec4 g_vPerViewConstantExtraData0;
	vec4 g_vPerViewConstantExtraData1;
	vec4 g_vPerViewConstantExtraData2;
	vec4 g_vPerViewConstantExtraData3;
} ;
layout( binding = 18 ) uniform sampler2D g_tTransformTexture;
layout(std140, binding = 13 ) uniform _Globals_ {
	vec4 g_vSheetSequenceAndSizes;
	float g_flOverbrightFactor;
} ;
layout( binding = 19 ) uniform sampler2D g_tColor;
layout(std140) uniform DotaGlobalParams_t {
	vec3 g_vGlobalLightDir;
	vec3 g_vGlobalLightColor;
	float g_flGlobalLightSpecularScale;
	vec3 g_vGlobalLightSpecularDir;
	float g_flGlobalLightSpecularExp;
	vec3 g_vGlobalLightSpecularColor;
	float g_flGlobalLightSpecularIndependence;
	vec3 g_vGlobalLightAmbientDir;
	float g_flGlobalLightAmbientScale1;
	vec3 g_vGlobalLightAmbientColor1;
	float g_flGlobalLightAmbientScale2;
	vec3 g_vGlobalLightAmbientColor2;
	float g_flGlobalLightAmbientScale2Hero;
	vec2 g_vGlobalCloud1Offset;
	vec2 g_vGlobalCloud2Offset;
	vec3 g_vFowColor;
	float g_flGlobalCloudScale;
	float g_flFowDarkness;
	float g_flFowGrayFactor;
	float g_flFowColorFactor;
	float g_flFowGrayHilights;
	vec4 g_vFowWorldSize;
	vec4 g_vFowTexOffsets;
	layout(row_major) mat4 g_matShadowWorldToTexture;
	vec4 g_vInvShadowDepthTextureSize;
	vec3 g_vGlobalLightAmbientColor3;
	float g_flGlobalLightAmbientShadowAmount;
} ;
uniform sampler2D g_tFow;
uniform sampler2D g_tFrameBufferCopyTexture;
uniform sampler2D g_tDepthTexture;
uniform sampler2D g_tGBufferAlbedo;
uniform sampler2D g_tGBufferLightingTerms;
uniform sampler2D g_tGBufferDepth;
uniform sampler2D g_tGBufferNormalWs;
layout(std140) uniform PerViewLightingConstantBuffer_t {
	vec4 g_vInvLightTextureDims;
	vec4 g_vLightBinCounts;
	vec2 g_vLowResDeferredLightingTextureDim;
	vec2 g_vLowResDeferredLightingTextureInvDim;
	vec3 g_vToolsAmbientLighting;
	float g_flSSAOEnabled;
	vec3 g_vIrradAtlasInvSize;
	float g_flIrradGlobalLightingFactor;
	vec4 g_vGlobalLightingSHRed;
	vec4 g_vGlobalLightingSHGreen;
	vec4 g_vGlobalLightingSHBlue;
	vec3 g_vRayleighScatteringCoeff;
	float g_flMieScatteringEccentricity;
	vec3 g_vMieScatteringCoeff;
	float g_flMieForwardScatteringRatio;
	vec3 g_vSpecularCubeMapScale;
	float g_flDefaultEnvMapIndex;
	vec4 g_vLightCookieSheetSequenceAndSizes;
	vec3 g_vLpvBoxMinCascade0;
	float g_flLpvBrightnessScale;
	vec3 g_vLpvInvBoxDimCascade0;
	vec2 g_vLpvInvCoeffTextureDim;
} ;
layout(std140) uniform PerLayerConstantBuffer_t {
	vec4 g_vWireframeColor;
} ;
uniform sampler2D g_tSheetTexture;
layout(location=0) in vec3 VS_INPUT_gl_vPositionOs;
layout(location=1) in vec4 VS_INPUT_gl_vDecalOriginOsAndOther;
layout(location=2) in vec4 VS_INPUT_gl_vDecalRightOsAndAlpha;
layout(location=3) in vec4 VS_INPUT_gl_vDecalUpAndLengthOs;
layout(location=4) in vec4 VS_INPUT_gl_vSeqStartsAnimScaleAndTime;
layout(location=5) in vec2 VS_INPUT_gl_vTransformTextureUV;
out gl_PerVertex {
	vec4 gl_Position;
	float gl_ClipDistance[1];
} ;
layout(location=0) out vec4 PS_INPUT_gl_vDecalOriginWsAndOther;
layout(location=1) out vec4 PS_INPUT_gl_vDecalRightWsAndAlpha;
layout(location=2) out vec4 PS_INPUT_gl_vDecalUpWsAndBlendAlbedo;
layout(location=3) out vec3 PS_INPUT_gl_vDecalForwardWs;
layout(location=4) out vec4 PS_INPUT_gl_vAlbedoRect0;
layout(location=5) out vec4 PS_INPUT_gl_vAlbedoRect1;
layout(location=6) out vec4 PS_INPUT_gl_vTintColor;
layout(location=7) out vec3 PS_INPUT_gl_vPositionWs;
const float C_0d0 = 0.0;
const ivec2 C_ivec2p1ca0p = ivec2(1, 0);
const ivec2 C_ivec2p2ca0p = ivec2(2, 0);
const float C_1d0 = 1.0;
const ivec2 C_ivec2p3ca0p = ivec2(3, 0);
const vec4 C_6zxxt61 = vec4(0.0, 0.0, 1.0, 1.0);
const vec2 C_vec2p0d0p = vec2(0.0);
const float C_2d0 = 2.0;
void main()
{
	PS_INPUT o;
	PS_INPUT mainOut;
	gl_ClipDistance[0] = C_0d0;
	vec4 vMatObjectToWorldRow = textureLod(g_tTransformTexture, VS_INPUT_gl_vTransformTextureUV, C_0d0);
	vec4 vMatObjectToWorldRow1 = textureLodOffset(g_tTransformTexture, VS_INPUT_gl_vTransformTextureUV, C_0d0, C_ivec2p1ca0p);
	vec4 vMatObjectToWorldRow2 = textureLodOffset(g_tTransformTexture, VS_INPUT_gl_vTransformTextureUV, C_0d0, C_ivec2p2ca0p);
	vec4 H_ol7vfn1 = vec4(VS_INPUT_gl_vPositionOs.x, VS_INPUT_gl_vPositionOs.y, VS_INPUT_gl_vPositionOs.z, C_1d0);
	float dotres = dot(H_ol7vfn1, vMatObjectToWorldRow);
	float dotres1 = dot(H_ol7vfn1, vMatObjectToWorldRow1);
	float dotres2 = dot(H_ol7vfn1, vMatObjectToWorldRow2);
	vec3 H_3cij4j1 = vec3(dotres, dotres1, dotres2);
	o.member7 = H_3cij4j1;
	vec4 H_vokf33 = vec4(dotres, dotres1, dotres2, C_1d0);
	vec4 H_a5xsfe = H_vokf33 + g_vWorldToCameraOffset;
	float dotres3 = dot(H_a5xsfe, g_matWorldToProjection[0]);
	float dotres4 = dot(H_a5xsfe, g_matWorldToProjection[1]);
	float dotres5 = dot(H_a5xsfe, g_matWorldToProjection[2]);
	float dotres6 = dot(H_a5xsfe, g_matWorldToProjection[3]);
	vec4 H_40o89y = vec4(dotres3, dotres4, dotres5, dotres6);
	o.member8 = H_40o89y;
	vec4 vRet = textureLodOffset(g_tTransformTexture, VS_INPUT_gl_vTransformTextureUV, C_0d0, C_ivec2p3ca0p);
	o.member6 = vRet;
	vec3 H_eqbz9z = vec3(g_flOverbrightFactor);
	vec3 H_dwbtyh = H_eqbz9z * vRet.xyz;
	vec4 H_498olf1 = vRet;
	H_498olf1.xyz = H_dwbtyh.xyz;
	o.member6 = H_498olf1;
	vec4 H_b7ll8s1 = vec4(VS_INPUT_gl_vDecalOriginOsAndOther.x, VS_INPUT_gl_vDecalOriginOsAndOther.y, VS_INPUT_gl_vDecalOriginOsAndOther.z, C_1d0);
	float dotres7 = dot(H_b7ll8s1, vMatObjectToWorldRow);
	float dotres8 = dot(H_b7ll8s1, vMatObjectToWorldRow1);
	float dotres9 = dot(H_b7ll8s1, vMatObjectToWorldRow2);
	vec4 H_f0pl271 = vec4(dotres7, dotres8, dotres9, VS_INPUT_gl_vDecalOriginOsAndOther.w);
	o.member0 = H_f0pl271;
	vec4 H_ymzq9d1 = vec4(VS_INPUT_gl_vDecalRightOsAndAlpha.x, VS_INPUT_gl_vDecalRightOsAndAlpha.y, VS_INPUT_gl_vDecalRightOsAndAlpha.z, C_0d0);
	float dotresa = dot(H_ymzq9d1, vMatObjectToWorldRow);
	float dotresb = dot(H_ymzq9d1, vMatObjectToWorldRow1);
	float dotresc = dot(H_ymzq9d1, vMatObjectToWorldRow2);
	vec3 H_s0hyb31 = vec3(dotresa, dotresb, dotresc);
	vec4 H_zw0lzc1 = vec4(VS_INPUT_gl_vDecalUpAndLengthOs.x, VS_INPUT_gl_vDecalUpAndLengthOs.y, VS_INPUT_gl_vDecalUpAndLengthOs.z, C_0d0);
	float dotresd = dot(H_zw0lzc1, vMatObjectToWorldRow);
	float dotrese = dot(H_zw0lzc1, vMatObjectToWorldRow1);
	float dotresf = dot(H_zw0lzc1, vMatObjectToWorldRow2);
	vec3 H_9svrs5 = vec3(dotresd, dotrese, dotresf);
	vec4 H_n9gl2o1 = vec4(dotresa, dotresb, dotresc, VS_INPUT_gl_vDecalRightOsAndAlpha.w);
	o.member1 = H_n9gl2o1;
	vec4 Lg_1;
	Lg_1.xyz = vec3(dotresd, dotrese, dotresf);
	o.member2 = Lg_1;
	float flForwardScale = C_1d0 / VS_INPUT_gl_vDecalUpAndLengthOs.w;
	vec3 H_wpglg41 = vec3(flForwardScale);
	vec3 H_2m0cvx1 = cross(H_s0hyb31, H_9svrs5);
	vec3 H_da8j79 = normalize(H_2m0cvx1);
	vec3 H_qo333l = H_da8j79 * H_wpglg41;
	o.member3 = H_qo333l;
	o.member4 = C_6zxxt61;
	o.member5 = C_6zxxt61;
	vec4 H_33d2g = vec4(dotresd, dotrese, dotresf, C_1d0);
	o.member2 = H_33d2g;
	vec4 vDontOptimizeMeOut = textureLod(g_tColor, C_vec2p0d0p, C_0d0);
	float H_q7gkrx1 = min(C_0d0, vDontOptimizeMeOut.x);
	vec4 H_881d9z = C_6zxxt61;
	H_881d9z.xy = vec2(H_q7gkrx1, H_q7gkrx1);
	o.member4 = H_881d9z;
	PS_INPUT_gl_vDecalOriginWsAndOther = o.member0;
	PS_INPUT_gl_vDecalRightWsAndAlpha = o.member1;
	PS_INPUT_gl_vDecalUpWsAndBlendAlbedo = o.member2;
	PS_INPUT_gl_vDecalForwardWs = o.member3;
	PS_INPUT_gl_vAlbedoRect0 = o.member4;
	PS_INPUT_gl_vAlbedoRect1 = o.member5;
	PS_INPUT_gl_vTintColor = o.member6;
	PS_INPUT_gl_vPositionWs = o.member7;
	float H_2fljzx1 = C_0d0 - o.member8.y;
	float H_kcpsgv = o.member8.z * C_2d0;
	float H_jkxto51 = H_kcpsgv - o.member8.w;
	vec4 H_6imyf81 = o.member8;
	H_6imyf81.yz = vec2(H_2fljzx1, H_jkxto51);
	gl_Position = H_6imyf81;
}

