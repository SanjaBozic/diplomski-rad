#version 330 core
// LunarGOO output
#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable
layout(std140, binding = 0 ) uniform _Globals_ {
	float g_flBumpStrength;
	vec3 g_vColorTint0;
	vec3 g_vColorTint1;
	vec3 g_vColorTint2;
	vec3 g_vColorTint3;
	vec3 g_vColorTintB0;
	vec3 g_vColorTintB1;
	vec3 g_vColorTintB2;
	vec3 g_vColorTintB3;
	vec4 g_vGlobalTint;
	vec3 g_vBorderColorTint1;
	vec3 g_vBorderColorTint2;
	vec3 g_vBorderColorTint3;
	float g_flBorderOffset1;
	float g_flBorderOffset2;
	float g_flBorderOffset3;
	float g_flBorderTintStrength1;
	float g_flBorderTintStrength2;
	float g_flBorderTintStrength3;
	float g_flBorderTintSoftness1;
	float g_flBorderTintSoftness2;
	float g_flBorderTintSoftness3;
	float g_flSpecularIntensity;
	float g_flSpecularBloom;
	float g_flTexCoordScale0;
	float g_flTexCoordRotate0;
	vec2 g_vTexCoordScroll0;
	vec2 g_vTexCoordOffset0;
	float g_flTexCoordScale1;
	float g_flTexCoordRotate1;
	vec2 g_vTexCoordScroll1;
	vec2 g_vTexCoordOffset1;
	float g_flTexCoordScale2;
	float g_flTexCoordRotate2;
	vec2 g_vTexCoordScroll2;
	vec2 g_vTexCoordOffset2;
	vec3 g_vTexCoordTransform2U;
	vec3 g_vTexCoordTransform2V;
	float g_flTexCoordScale3;
	float g_flTexCoordRotate3;
	vec2 g_vTexCoordScroll3;
	vec2 g_vTexCoordOffset3;
	vec3 g_vTexCoordTransform3U;
	vec3 g_vTexCoordTransform3V;
	vec3 g_vNormalTransform0U;
	vec3 g_vNormalTransform0V;
	vec3 g_vNormalTransform1U;
	vec3 g_vNormalTransform1V;
	vec3 g_vNormalTransform2U;
	vec3 g_vNormalTransform2V;
	vec3 g_vNormalTransform3U;
	vec3 g_vNormalTransform3V;
} ;
layout( binding = 0 ) uniform sampler2D g_tColor0;
layout( binding = 1 ) uniform sampler2D g_tColor1;
layout( binding = 2 ) uniform sampler2D g_tColor2;
layout( binding = 3 ) uniform sampler2D g_tColor3;
layout( binding = 4 ) uniform sampler2D g_tTintMasks;
layout( binding = 5 ) uniform sampler2D g_tSpecular0;
layout( binding = 6 ) uniform sampler2D g_tSpecular1;
layout( binding = 7 ) uniform sampler2D g_tSpecular2;
layout( binding = 8 ) uniform sampler2D g_tSpecular3;
layout( binding = 9 ) uniform sampler2D g_tNormal0;
layout( binding = 10 ) uniform sampler2D g_tNormal1;
layout( binding = 11 ) uniform sampler2D g_tNormal2;
layout( binding = 12 ) uniform sampler2D g_tNormal3;
layout(std140) uniform DotaGlobalParams_t {
	vec3 g_vGlobalLightDir;
	vec3 g_vGlobalLightColor;
	float g_flGlobalLightSpecularScale;
	vec3 g_vGlobalLightSpecularDir;
	float g_flGlobalLightSpecularExp;
	vec3 g_vGlobalLightSpecularColor;
	float g_flGlobalLightSpecularIndependence;
	vec3 g_vGlobalLightAmbientDir;
	float g_flGlobalLightAmbientScale1;
	vec3 g_vGlobalLightAmbientColor1;
	float g_flGlobalLightAmbientScale2;
	vec3 g_vGlobalLightAmbientColor2;
	float g_flGlobalLightAmbientScale2Hero;
	vec2 g_vGlobalCloud1Offset;
	vec2 g_vGlobalCloud2Offset;
	vec3 g_vFowColor;
	float g_flGlobalCloudScale;
	float g_flFowDarkness;
	float g_flFowGrayFactor;
	float g_flFowColorFactor;
	float g_flFowGrayHilights;
	vec4 g_vFowWorldSize;
	vec4 g_vFowTexOffsets;
	layout(row_major) mat4 g_matShadowWorldToTexture;
	vec4 g_vInvShadowDepthTextureSize;
	vec3 g_vGlobalLightAmbientColor3;
	float g_flGlobalLightAmbientShadowAmount;
} ;
uniform sampler2D g_tFow;
uniform sampler2D g_tFrameBufferCopyTexture;
uniform sampler2D g_tDepthTexture;
uniform sampler2D g_tGBufferAlbedo;
uniform sampler2D g_tGBufferLightingTerms;
uniform sampler2D g_tGBufferDepth;
uniform sampler2D g_tGBufferNormalWs;
layout(std140) uniform PerViewConstantBuffer_t {
	layout(row_major) mat4 g_matWorldToProjection;
	layout(row_major) mat4 g_matProjectionToWorld;
	layout(row_major) mat4 g_matWorldToView;
	layout(row_major) mat4 g_matViewToProjection;
	vec4 g_vInvProjRow3;
	vec4 g_vClipPlane0;
	float g_flToneMapScalarLinear;
	float g_flLightMapScalar;
	float g_flEnvMapScalar;
	float g_flToneMapScalarGamma;
	vec3 g_vCameraPositionWs;
	float g_flViewportMinZ;
	vec3 g_vCameraDirWs;
	float g_flViewportMaxZ;
	vec3 g_vCameraUpDirWs;
	float g_flTime;
	vec3 g_vDepthPsToVsConversion;
	float g_flNearPlane;
	float g_flFarPlane;
	float g_flLightBinnerFarPlane;
	vec2 g_vInvViewportSize;
	vec2 g_vViewportToGBufferRatio;
	vec2 g_vMorphTextureAtlasSize;
	vec4 g_vInvGBufferSize;
	vec2 g_vViewportOffset;
	vec2 g_vViewportSize;
	vec2 g_vRenderTargetSize;
	float g_flFogBlendToBackground;
	float g_flHenyeyGreensteinCoeff;
	vec3 g_vFogColor;
	float g_flNegFogStartOverFogRange;
	float g_flInvFogRange;
	float g_flFogMaxDensity;
	float g_flFogExponent;
	float g_flMod2xIdentity;
	vec2 g_bRoughnessParams;
	float g_bStereoEnabled;
	float g_flStereoCameraIndex;
	vec3 g_vMiddleEyePositionWs;
	float g_flPad2;
	layout(row_major) mat4 g_matWorldToProjectionMultiview[2];
	vec4 g_vCameraPositionWsMultiview[2];
	vec4 g_vFrameBufferCopyInvSizeAndUvScale;
	vec4 g_vCameraAngles;
	vec4 g_vWorldToCameraOffset;
	vec4 g_vWorldToCameraOffsetMultiview[2];
	vec4 g_vPerViewConstantExtraData0;
	vec4 g_vPerViewConstantExtraData1;
	vec4 g_vPerViewConstantExtraData2;
	vec4 g_vPerViewConstantExtraData3;
} ;
layout(std140) uniform PerViewLightingConstantBuffer_t {
	vec4 g_vInvLightTextureDims;
	vec4 g_vLightBinCounts;
	vec2 g_vLowResDeferredLightingTextureDim;
	vec2 g_vLowResDeferredLightingTextureInvDim;
	vec3 g_vToolsAmbientLighting;
	float g_flSSAOEnabled;
	vec3 g_vIrradAtlasInvSize;
	float g_flIrradGlobalLightingFactor;
	vec4 g_vGlobalLightingSHRed;
	vec4 g_vGlobalLightingSHGreen;
	vec4 g_vGlobalLightingSHBlue;
	vec3 g_vRayleighScatteringCoeff;
	float g_flMieScatteringEccentricity;
	vec3 g_vMieScatteringCoeff;
	float g_flMieForwardScatteringRatio;
	vec3 g_vSpecularCubeMapScale;
	float g_flDefaultEnvMapIndex;
	vec4 g_vLightCookieSheetSequenceAndSizes;
	vec3 g_vLpvBoxMinCascade0;
	float g_flLpvBrightnessScale;
	vec3 g_vLpvInvBoxDimCascade0;
	vec2 g_vLpvInvCoeffTextureDim;
} ;
layout(std140) uniform PerLayerConstantBuffer_t {
	vec4 g_vWireframeColor;
} ;
uniform sampler2D g_tClouds;
uniform sampler2DShadow g_tShadowDepthTexture;
layout(location=0) in vec4 PS_INPUT_gl_vPositionWs_flLinearDepth;
layout(location=1) in vec4 PS_INPUT_gl_vNormalWs_flSpecularAmount;
layout(location=2) in vec4 PS_INPUT_gl_vVertexColor;
layout(location=3) in vec4 PS_INPUT_gl_vColorBlendValues_BlendY;
layout(location=4) in vec4 PS_INPUT_gl_vAlphaBlendValues_BlendZ;
layout(location=5) in vec4 PS_INPUT_gl_vTangentUWs_flTangentVSign;
layout(location=6) in vec4 PS_INPUT_gl_vBaseTexCoord0_vBaseTexCoord1;
layout(location=7) in vec4 PS_INPUT_gl_vBaseTexCoord2_vBaseTexCoord3;
layout(location=0) out vec4 PS_OUTPUT_gl_vDiffuse;
layout(location=1) out vec4 PS_OUTPUT_gl_vSpecular;
layout(location=2) out vec4 PS_OUTPUT_gl_flDepth;
layout(location=3) out vec4 PS_OUTPUT_gl_vNormal;
const float C_0d0 = 0.0;
const float C_1d0 = 1.0;
const vec2 C_vec2p2d0p = vec2(2.0);
const vec2 C_vec2pa1d0p = vec2(-1.0);
const vec3 C_vec3p0d5p = vec3(0.5);
void main()
{
	vec3 vGeometricNormalWs = normalize(PS_INPUT_gl_vNormalWs_flSpecularAmount.xyz);
	vec3 vTangentUWs = normalize(PS_INPUT_gl_vTangentUWs_flTangentVSign.xyz);
	vec3 vTangentVWs = cross(vGeometricNormalWs, PS_INPUT_gl_vTangentUWs_flTangentVSign.xyz);
	vec3 vTangentVWs1 = normalize(vTangentVWs);
	vec3 vTangentVWs2 = PS_INPUT_gl_vTangentUWs_flTangentVSign.www * vTangentVWs1;
	vec4 vDiffuse = texture(g_tColor0, PS_INPUT_gl_vBaseTexCoord0_vBaseTexCoord1.xy);
	vec4 vDiffuse1 = texture(g_tColor1, PS_INPUT_gl_vBaseTexCoord0_vBaseTexCoord1.zw);
	vec4 vDiffuse2 = texture(g_tColor2, PS_INPUT_gl_vBaseTexCoord2_vBaseTexCoord3.xy);
	vec4 vDiffuse3 = texture(g_tColor3, PS_INPUT_gl_vBaseTexCoord2_vBaseTexCoord3.zw);
	vec4 vTintMasks = texture(g_tTintMasks, PS_INPUT_gl_vBaseTexCoord0_vBaseTexCoord1.xy);
	vec4 vTintMasks1 = texture(g_tTintMasks, PS_INPUT_gl_vBaseTexCoord0_vBaseTexCoord1.zw);
	vec4 vTintMasks2 = texture(g_tTintMasks, PS_INPUT_gl_vBaseTexCoord2_vBaseTexCoord3.xy);
	vec4 vTintMasks3 = texture(g_tTintMasks, PS_INPUT_gl_vBaseTexCoord2_vBaseTexCoord3.zw);
	vec3 vTint = mix(g_vColorTintB0, g_vColorTint0, vTintMasks.x);
	vec3 vTint1 = mix(g_vColorTintB1, g_vColorTint1, vTintMasks1.y);
	vec3 vTint2 = mix(g_vColorTintB2, g_vColorTint2, vTintMasks2.z);
	vec3 vTint3 = mix(g_vColorTintB3, g_vColorTint3, vTintMasks3.w);
	vec3 H_dzlz43 = vDiffuse.xyz * vTint;
	vec3 H_73ti64 = vDiffuse1.xyz * vTint1;
	vec3 H_xqutex1 = vDiffuse2.xyz * vTint2;
	vec3 H_fzdaww = vDiffuse3.xyz * vTint3;
	float H_kgh6kc = vDiffuse1.w - PS_INPUT_gl_vAlphaBlendValues_BlendZ.x;
	float minb = max(C_0d0, H_kgh6kc);
	float H_cl72vu1 = PS_INPUT_gl_vAlphaBlendValues_BlendZ.x + vDiffuse1.w;
	float maxb = min(C_1d0, H_cl72vu1);
	float flResult = smoothstep(minb, maxb, PS_INPUT_gl_vColorBlendValues_BlendY.x);
	vec4 H_lbklhh1 = vec4(flResult);
	vec3 H_ce1opy1 = vec3(flResult);
	float H_4abpfv = C_1d0 - flResult;
	float H_8kria8 = vDiffuse2.w - PS_INPUT_gl_vAlphaBlendValues_BlendZ.y;
	float minb1 = max(C_0d0, H_8kria8);
	float H_qcf9ui = PS_INPUT_gl_vAlphaBlendValues_BlendZ.y + vDiffuse2.w;
	float maxb1 = min(C_1d0, H_qcf9ui);
	float flResult1 = smoothstep(minb1, maxb1, PS_INPUT_gl_vColorBlendValues_BlendY.y);
	float flResult2 = clamp(flResult1, C_0d0, H_4abpfv);
	vec4 H_fjfksz = vec4(flResult2);
	vec3 H_cy3lxl = vec3(flResult2);
	float H_x6pp2y1 = H_4abpfv - flResult2;
	float H_snh0yx = vDiffuse3.w - PS_INPUT_gl_vAlphaBlendValues_BlendZ.z;
	float minb2 = max(C_0d0, H_snh0yx);
	float H_cvcskd1 = PS_INPUT_gl_vAlphaBlendValues_BlendZ.z + vDiffuse3.w;
	float maxb2 = min(C_1d0, H_cvcskd1);
	float flResult3 = smoothstep(minb2, maxb2, PS_INPUT_gl_vColorBlendValues_BlendY.z);
	float flResult4 = clamp(flResult3, C_0d0, H_x6pp2y1);
	vec4 H_149rs91 = vec4(flResult4);
	vec3 H_yruoot = vec3(flResult4);
	float H_8qsjgf1 = H_x6pp2y1 - flResult4;
	vec4 H_9rjn0c = vec4(H_8qsjgf1);
	vec3 H_q3sb44 = vec3(H_8qsjgf1);
	vec3 H_184kem1 = H_dzlz43 * H_q3sb44;
	vec3 H_sox36b = H_73ti64 * H_ce1opy1;
	vec3 H_2e738g = H_184kem1 + H_sox36b;
	vec3 H_k75rr51 = H_cy3lxl * H_xqutex1;
	vec3 H_vro33h1 = H_2e738g + H_k75rr51;
	vec3 H_kaiem51 = H_fzdaww * H_yruoot;
	vec3 H_p8ymdn1 = H_kaiem51 + H_vro33h1;
	vec3 H_8gsj1f = H_p8ymdn1 * PS_INPUT_gl_vVertexColor.xyz;
	vec4 vSpecular = texture(g_tSpecular0, PS_INPUT_gl_vBaseTexCoord0_vBaseTexCoord1.xy);
	vec4 vSpecular1 = texture(g_tSpecular1, PS_INPUT_gl_vBaseTexCoord0_vBaseTexCoord1.zw);
	vec4 vSpecular2 = texture(g_tSpecular2, PS_INPUT_gl_vBaseTexCoord2_vBaseTexCoord3.xy);
	vec4 vSpecular3 = texture(g_tSpecular3, PS_INPUT_gl_vBaseTexCoord2_vBaseTexCoord3.zw);
	vec3 H_9hcu15 = H_q3sb44 * vSpecular.xyz;
	vec3 H_naakvz = H_ce1opy1 * vSpecular1.xyz;
	vec3 H_qezh2d = H_9hcu15 + H_naakvz;
	vec3 H_dx2101 = H_cy3lxl * vSpecular2.xyz;
	vec3 H_aw2g5t1 = H_dx2101 + H_qezh2d;
	vec3 H_jsi1kn1 = H_yruoot * vSpecular3.xyz;
	vec3 H_s1w56n = H_aw2g5t1 + H_jsi1kn1;
	float H_ekxfcg1 = H_s1w56n.x * g_flSpecularIntensity;
	float H_ayr8ln = H_s1w56n.z * g_flSpecularBloom;
	vec4 vNormalTexel = texture(g_tNormal0, PS_INPUT_gl_vBaseTexCoord0_vBaseTexCoord1.xy);
	vec4 vNormalTexel1 = texture(g_tNormal1, PS_INPUT_gl_vBaseTexCoord0_vBaseTexCoord1.zw);
	vec4 vNormalTexel2 = texture(g_tNormal2, PS_INPUT_gl_vBaseTexCoord2_vBaseTexCoord3.xy);
	vec4 vNormalTexel3 = texture(g_tNormal3, PS_INPUT_gl_vBaseTexCoord2_vBaseTexCoord3.zw);
	vec3 H_c9sxtd1 = vec3(vNormalTexel.w, vNormalTexel.y, C_1d0);
	float vNormalTexel4 = dot(g_vNormalTransform0U, H_c9sxtd1);
	float vNormalTexel5 = dot(g_vNormalTransform0V, H_c9sxtd1);
	vec4 H_2ett9s1 = vNormalTexel;
	H_2ett9s1.yw = vec2(vNormalTexel5, vNormalTexel4);
	vec3 H_m9bnvc = vec3(vNormalTexel1.w, vNormalTexel1.y, C_1d0);
	float vNormalTexel6 = dot(g_vNormalTransform1U, H_m9bnvc);
	float vNormalTexel7 = dot(g_vNormalTransform1V, H_m9bnvc);
	vec4 H_d5i45r1 = vNormalTexel1;
	H_d5i45r1.yw = vec2(vNormalTexel7, vNormalTexel6);
	vec3 H_gapr6p1 = vec3(vNormalTexel2.w, vNormalTexel2.y, C_1d0);
	float vNormalTexel8 = dot(g_vNormalTransform2U, H_gapr6p1);
	float vNormalTexel9 = dot(g_vNormalTransform2V, H_gapr6p1);
	vec4 H_g2p5bq1 = vNormalTexel2;
	H_g2p5bq1.yw = vec2(vNormalTexel9, vNormalTexel8);
	vec3 H_2lajvb = vec3(vNormalTexel3.w, vNormalTexel3.y, C_1d0);
	float vNormalTexela = dot(g_vNormalTransform3U, H_2lajvb);
	float vNormalTexelb = dot(g_vNormalTransform3V, H_2lajvb);
	vec4 H_fra5lq1 = vNormalTexel3;
	H_fra5lq1.yw = vec2(vNormalTexelb, vNormalTexela);
	vec4 H_d8o8mm = H_2ett9s1 * H_9rjn0c;
	vec4 H_14tvae = H_d5i45r1 * H_lbklhh1;
	vec4 H_k3x5lf = H_14tvae + H_d8o8mm;
	vec4 H_dk37g91 = H_fjfksz * H_g2p5bq1;
	vec4 H_nh9jil1 = H_dk37g91 + H_k3x5lf;
	vec4 H_oaezte1 = H_149rs91 * H_fra5lq1;
	vec4 vBlendedNormalTexel = H_nh9jil1 + H_oaezte1;
	vec2 H_m8lc3k1 = vBlendedNormalTexel.wy * C_vec2p2d0p;
	vec2 H_k9c4oe1 = H_m8lc3k1 + C_vec2pa1d0p;
	float vNormalTs = dot(H_k9c4oe1, H_k9c4oe1);
	float param = C_1d0 - vNormalTs;
	float misc3a = clamp(param, C_0d0, C_1d0);
	float vNormalTs1 = sqrt(misc3a);
	float H_ikr96c1 = C_0d0 - H_k9c4oe1.y;
	vec2 H_x1he8s = vec2(g_flBumpStrength);
	vec2 H_v0t2831 = vec2(H_k9c4oe1.x, H_ikr96c1);
	vec2 H_ytgoo5 = H_v0t2831 * H_x1he8s;
	vec3 H_xxwq9g1 = vec3(H_ytgoo5.x, H_ytgoo5.y, vNormalTs1);
	vec3 vNormalTs2 = normalize(H_xxwq9g1);
	vec3 vVectorWs = vNormalTs2.xxx * vTangentUWs;
	vec3 H_35021c1 = vNormalTs2.yyy * vTangentVWs2;
	vec3 vVectorWs1 = H_35021c1 + vVectorWs;
	vec3 H_9wf1l91 = vGeometricNormalWs * vNormalTs2.zzz;
	vec3 vVectorWs2 = H_9wf1l91 + vVectorWs1;
	vec3 H_qw6t8a1 = normalize(vVectorWs2);
	vec3 H_od0vzl1 = H_qw6t8a1 * C_vec3p0d5p;
	vec3 H_dhway41 = C_vec3p0d5p + H_od0vzl1;
	vec4 H_mgmwum1 = vec4(H_dhway41.x, H_dhway41.y, H_dhway41.z, C_0d0);
	vec4 H_trvyne1 = vec4(H_8gsj1f.x, H_8gsj1f.y, H_8gsj1f.z, C_0d0);
	vec4 H_t610uz = vec4(H_ekxfcg1, H_s1w56n.y, H_ayr8ln, C_0d0);
	PS_OUTPUT_gl_vDiffuse = H_trvyne1;
	PS_OUTPUT_gl_vSpecular = H_t610uz;
	PS_OUTPUT_gl_flDepth = PS_INPUT_gl_vPositionWs_flLinearDepth.wwww;
	PS_OUTPUT_gl_vNormal = H_mgmwum1;
}
