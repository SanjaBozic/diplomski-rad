#version 330 core
// LunarGOO output
#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable
layout(std140, binding = 0 ) uniform _Globals_ {
	vec4 g_vInvTexDim;
} ;
layout( binding = 0 ) uniform sampler2D g_tInput;
layout(std140) uniform PerViewConstantBuffer_t {
	layout(row_major) mat4 g_matWorldToProjection;
	layout(row_major) mat4 g_matProjectionToWorld;
	layout(row_major) mat4 g_matWorldToView;
	layout(row_major) mat4 g_matViewToProjection;
	vec4 g_vInvProjRow3;
	vec4 g_vClipPlane0;
	float g_flToneMapScalarLinear;
	float g_flLightMapScalar;
	float g_flEnvMapScalar;
	float g_flToneMapScalarGamma;
	vec3 g_vCameraPositionWs;
	float g_flViewportMinZ;
	vec3 g_vCameraDirWs;
	float g_flViewportMaxZ;
	vec3 g_vCameraUpDirWs;
	float g_flTime;
	vec3 g_vDepthPsToVsConversion;
	float g_flNearPlane;
	float g_flFarPlane;
	float g_flLightBinnerFarPlane;
	vec2 g_vInvViewportSize;
	vec2 g_vViewportToGBufferRatio;
	vec2 g_vMorphTextureAtlasSize;
	vec4 g_vInvGBufferSize;
	vec2 g_vViewportOffset;
	vec2 g_vViewportSize;
	vec2 g_vRenderTargetSize;
	float g_flFogBlendToBackground;
	float g_flHenyeyGreensteinCoeff;
	vec3 g_vFogColor;
	float g_flNegFogStartOverFogRange;
	float g_flInvFogRange;
	float g_flFogMaxDensity;
	float g_flFogExponent;
	float g_flMod2xIdentity;
	vec2 g_bRoughnessParams;
	float g_bStereoEnabled;
	float g_flStereoCameraIndex;
	vec3 g_vMiddleEyePositionWs;
	float g_flPad2;
	layout(row_major) mat4 g_matWorldToProjectionMultiview[2];
	vec4 g_vCameraPositionWsMultiview[2];
	vec4 g_vFrameBufferCopyInvSizeAndUvScale;
	vec4 g_vCameraAngles;
	vec4 g_vWorldToCameraOffset;
	vec4 g_vWorldToCameraOffsetMultiview[2];
	vec4 g_vPerViewConstantExtraData0;
	vec4 g_vPerViewConstantExtraData1;
	vec4 g_vPerViewConstantExtraData2;
	vec4 g_vPerViewConstantExtraData3;
} ;
layout(std140) uniform PerViewLightingConstantBuffer_t {
	vec4 g_vInvLightTextureDims;
	vec4 g_vLightBinCounts;
	vec2 g_vLowResDeferredLightingTextureDim;
	vec2 g_vLowResDeferredLightingTextureInvDim;
	vec3 g_vToolsAmbientLighting;
	float g_flSSAOEnabled;
	vec3 g_vIrradAtlasInvSize;
	float g_flIrradGlobalLightingFactor;
	vec4 g_vGlobalLightingSHRed;
	vec4 g_vGlobalLightingSHGreen;
	vec4 g_vGlobalLightingSHBlue;
	vec3 g_vRayleighScatteringCoeff;
	float g_flMieScatteringEccentricity;
	vec3 g_vMieScatteringCoeff;
	float g_flMieForwardScatteringRatio;
	vec3 g_vSpecularCubeMapScale;
	float g_flDefaultEnvMapIndex;
	vec4 g_vLightCookieSheetSequenceAndSizes;
	vec3 g_vLpvBoxMinCascade0;
	float g_flLpvBrightnessScale;
	vec3 g_vLpvInvBoxDimCascade0;
	vec2 g_vLpvInvCoeffTextureDim;
} ;
layout(std140) uniform PerLayerConstantBuffer_t {
	vec4 g_vWireframeColor;
} ;
layout(location=0) out vec4 PS_OUTPUT_gl_vColor;
const vec2 C_vec2p4d0p = vec2(4.0);
const float C_0d0 = 0.0;
const ivec2 C_ivec2pa1p = ivec2(-1);
const ivec2 C_wk45l6 = ivec2(-1, 1);
const ivec2 C_ivec2p1p = ivec2(1);
const ivec2 C_cd2kfw = ivec2(1, -1);
const vec4 C_vec4p0d25p = vec4(0.25);
const vec3 C_vec3p12d92p = vec3(12.92);
const vec3 C_3ktjyb = vec3(0.416667);
const vec3 C_vec3p1d055p = vec3(1.055);
const vec3 C_m93d951 = vec3(-0.055);
const float C_0d0031308 = 0.0031308;
void main()
{
	vec2 H_43zt1l = g_vInvTexDim.xy * C_vec2p4d0p;
	vec2 vScreenUv = H_43zt1l * gl_FragCoord.xy;
	vec4 vTmp = textureLodOffset(g_tInput, vScreenUv, C_0d0, C_ivec2pa1p);
	vec4 vTmp1 = textureLodOffset(g_tInput, vScreenUv, C_0d0, C_wk45l6);
	vec4 H_tvivqq = vTmp + vTmp1;
	vec4 vTmp2 = textureLodOffset(g_tInput, vScreenUv, C_0d0, C_ivec2p1p);
	vec4 H_5ugzug1 = H_tvivqq + vTmp2;
	vec4 vTmp3 = textureLodOffset(g_tInput, vScreenUv, C_0d0, C_cd2kfw);
	vec4 H_vfncbb = H_5ugzug1 + vTmp3;
	vec4 H_ov2qr61 = H_vfncbb * C_vec4p0d25p;
	vec3 vLinearSegment = H_ov2qr61.xyz * C_vec3p12d92p;
	vec3 vExpSegment = pow(H_ov2qr61.xyz, C_3ktjyb);
	vec3 H_vrh075 = vExpSegment * C_vec3p1d055p;
	vec3 vExpSegment1 = H_vrh075 + C_m93d951;
	bool H_o3i05u1 = H_ov2qr61.x > C_0d0031308;
	float select = H_o3i05u1 ? vExpSegment1.x : vLinearSegment.x;
	bool H_zeva8n = H_ov2qr61.y > C_0d0031308;
	float select1 = H_zeva8n ? vExpSegment1.y : vLinearSegment.y;
	bool H_akdx72 = H_ov2qr61.z > C_0d0031308;
	float select2 = H_akdx72 ? vExpSegment1.z : vLinearSegment.z;
	vec4 H_30s7ft = H_ov2qr61;
	H_30s7ft.xyz = vec3(select, select1, select2);
	PS_OUTPUT_gl_vColor = H_30s7ft;
}
